@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    html {
        font-family: 'Poppins', sans-serif;
    }
}

@font-face {
    font-family: 'Poppins';
    src: url('/storage/app/public/fonts/Poppins-Regular.ttf') format('truetype');
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: 'Poppins';
    src: url('/storage/app/public/fonts/Poppins-Medium.ttf') format('truetype');
    font-weight: 500;
    font-style: normal;
}
@font-face {
    font-family: 'Poppins';
    src: url('/storage/app/public/fonts/Poppins-SemiBold.ttf') format('truetype');
    font-weight: 600;
    font-style: normal;
}
@font-face {
    font-family: 'NotoSerif';
    src: url('/storage/app/public/fonts/NotoSerif-Bold.ttf') format('truetype');
    font-weight: 700;
    font-style: normal;
}
@font-face {
    font-family: 'NotoSerif';
    src: url('/storage/app/public/fonts/NotoSerif-Regular.ttf') format('truetype');
    font-weight: 400;
    font-style: normal;
}
@font-face {
    font-family: 'NotoSerif';
    src: url('/storage/app/public/fonts/NotoSerif-SemiBold.ttf') format('truetype');
    font-weight: 600;
    font-style: normal;
}
.font-notoserif {
    font-family: 'NotoSerif', serif;
}

@font-face {
    font-family: 'Poppins';
    src: url('/storage/app/public/fonts/Poppins-Bold.ttf') format('truetype');
    font-weight: 700;
    font-style: normal;
}

h1 {
    font-size: clamp(2rem, 5vw, 3.75rem); /* 60px */
    line-height: 1.2;
}
.text-scale {
    font-size: clamp(2.25rem, 10vw, 3.75rem); /* 60px */
    line-height: 1.2;
}
.text-scale-sm {
    font-size: clamp(2.25rem, 6vw, 3.75rem); /* 60px */
    line-height: 1.2;
}

.text-flexible {
    font-size: clamp(1.2rem, 3vw, 2.25rem);
    line-height: 1.5;
}

.background-name {
    --x: -5px;
    --opacity: 100%;
    --rotate: -2deg;
    --y: 50%;
}
.background-name:after {
    content: '';
    position: absolute;
    top: var(--y);
    left: var(--x);
    opacity: var(--opacity);
    width: 110%;
    height: 1.3em; /* Adjust height as needed */
    background-color: #4b4eff; /* Adjust color as needed */
    z-index: -1;
    transform: translateY(-50%) rotate(var(--rotate));
    border-radius: 0.25em;
}

.bg-footer {
    background: rgb(51, 40, 174);
    background: radial-gradient(circle, rgba(51, 40, 174, 1) 0%, rgba(14, 8, 79, 1) 100%);
}

.bg-hero {
    background-image: url('/storage/app/public/background-mobile.png');
}
.bg-secondary {
    background-color: rgb(255, 255, 255);
    background:
        url('/storage/app/public/background-secondary.png') repeat-x,
        linear-gradient(180deg, rgba(255, 255, 255, 0) 20%, rgba(195, 199, 253, 1) 100%);
}
.bg-test {
    background-image: url('/storage/app/public/bg-test.png');
    background-size: cover;
    background-position: center;
}
.bg-image {
    background-image: url('/storage/app/public/bg-image.jpg');
}
@media (min-width: 768px) {
    .bg-hero {
        background-image: url('/storage/app/public/background-desktop.png');
    }
}

.top-burger-menu {
    background: transparent;
}
.fixed-section {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;
}
.scroll-section {
    margin-top: 100vh; /* La hauteur de la première section */
    z-index: 20;
    position: relative;
}
@media screen and (min-height: 500px) and (min-width: 640px) {
    .fixed-section {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 10;
    }
    .scroll-section {
        margin-top: 100vh; /* La hauteur de la première section */
        z-index: 20;
        position: relative;
    }
}
@media (max-width: 768px) {
    .nav-container input[type='checkbox']:checked ~ .top-burger-menu {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 30;
        width: 100%;
        height: 60px;
        background: white;
        transition: all 0.2s ease-in-out;
    }

    .nav-container input[type='checkbox']:checked {
        position: fixed;
    }

    .menu-items {
        transform: translateX(-100%);
        transition: transform 0.5s ease-in-out;
    }
    .nav-container .hamburger-lines .line {
        display: block;
        height: 3px;
        width: 100%;
        border-radius: 10px;
        background: #4b4eff;
    }
    .nav-container .hamburger-lines .line1 {
        transform-origin: 0% 0%;
        transition: transform 0.4s ease-in-out;
    }

    .nav-container .hamburger-lines .line2 {
        transition: transform 0.2s ease-in-out;
    }

    .nav-container .hamburger-lines .line3 {
        transform-origin: 15% 210%;
        transition: transform 0.4s ease-in-out;
    }
    .nav-container input[type='checkbox']:checked ~ .menu-items {
        transform: translateX(0);
        position: fixed;
    }
    .nav-container input[type='checkbox']:checked ~ .hamburger-lines {
        position: fixed;
    }

    .nav-container input[type='checkbox']:checked ~ .top-burger-menu .hamburger-lines .line1 {
        transform: rotate(45deg);
    }

    .nav-container input[type='checkbox']:checked ~ .top-burger-menu .hamburger-lines .line2 {
        transform: scaleY(0);
    }

    .nav-container input[type='checkbox']:checked ~ .top-burger-menu .hamburger-lines .line3 {
        transform: rotate(-45deg);
    }
}
.first-bounce {
    animation: bounce 5s infinite linear;
}
.second-bounce {
    animation: second-bounce 5s infinite linear;
}
@keyframes bounce {
    0% {
        transform: translateY(0);
    }
    12.5% {
        transform: translateY(5%);
    }
    25% {
        transform: translateY(10%);
    }
    37.5% {
        transform: translateY(5%);
    }
    50% {
        transform: translateY(0);
    }
    62.5% {
        transform: translateY(-5%);
    }
    75% {
        transform: translateY(-10%);
    }
    87.5% {
        transform: translateY(-5%);
    }
    100% {
        transform: translateY(0);
    }
}
@keyframes second-bounce {
    100% {
        transform: translateY(0);
    }
    87.5% {
        transform: translateY(5%);
    }
    75% {
        transform: translateY(10%);
    }
    62.5% {
        transform: translateY(5%);
    }
    50% {
        transform: translateY(0);
    }
    37.5% {
        transform: translateY(-5%);
    }
    25% {
        transform: translateY(-10%);
    }
    12.5% {
        transform: translateY(-5%);
    }
    0% {
        transform: translateY(0);
    }
}

.wave {
    animation-name: wave-animation;
    animation-duration: 2.5s;
    animation-iteration-count: infinite;
    transform-origin: 70% 70%;
    display: inline-block;
}

@keyframes wave-animation {
    0% {
        transform: rotate(0deg);
    }
    10% {
        transform: rotate(14deg);
    }
    20% {
        transform: rotate(-8deg);
    }
    30% {
        transform: rotate(14deg);
    }
    40% {
        transform: rotate(-4deg);
    }
    50% {
        transform: rotate(10deg);
    }
    60% {
        transform: rotate(0deg);
    } /* Reset for the last half to pause */
    100% {
        transform: rotate(0deg);
    }
}

/*HOVER EFFECT*/
.up {
    transition: all 0.2s ease-in-out;
}
.close {
    transition: all 0.2s ease-in-out;
}
.slide {
    transition: all 0.2s ease-in-out;
}
.transition-02 {
    transition: all 0.2s ease-in-out;
}
.up:hover,
.up:focus {
    box-shadow: inset 0 -3.5em 0 0 white;
}
.close:hover,
.close:focus {
    box-shadow:
        inset 10em 0 0 0 white,
        inset -10em 0 0 0 white;
}
@property --fill {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 100%;
}
.curtain-animation {
    background-image: linear-gradient(transparent var(--fill), #fff var(--fill));
    background-size: 100% 33.33%;
    transition: 0.2s ease-in-out 0.1s;
    transition-property: --fill, all;
    animation-play-state: paused;
}

.curtain-animation:hover,
.curtain-animation:focus-visible {
    --fill: 0%;
    background-image: linear-gradient(-135deg, transparent var(--fill), #fff var(--fill));
    animation-play-state: running;
}

.social-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-basis: 3.5rem;
    aspect-ratio: 1;
    font-size: 1.75rem;
    color: #fff;
    border: 2px solid #fff;
    border-radius: 1rem;
    text-decoration: none;
    outline: 1px solid transparent;
    outline-offset: -8px;
    fill: #fff;
    background-image: linear-gradient(-135deg, transparent var(--fill), #fff var(--fill));
    background-size: 100% 33.33%;

    transition: 0.3s ease-in-out 0.2s;
    transition-property: --fill, all;
}

.social-icon:hover,
.social-icon:focus-visible {
    --fill: 0%;
    color: #07071d;
    outline-color: currentColor;

    background-image: linear-gradient(transparent var(--fill), #fff var(--fill));
    transition-delay: 0s;
}

.linear-gradient {
    background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.7) 60%);
}
.project-link:focus ~ .project-description-box .project-description {
    opacity: 1;
    bottom: 0;
}
.project-link:focus ~ .project-description-box > .project-description,
.project-link:hover ~ .project-description-box > .project-description {
    display: flex;
}
.project-box .project-link:over ~ .project-description-box {
    width: 1px;
}
.slide:hover,
.slide:focus-visible {
    box-shadow: inset 20em 0 0 0 white;
}
.svg-dotted {
    -webkit-animation: rotate 2s ease-in-out;
    animation: rotate 2s ease-in-out;
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(180deg);
    }
}
@-webkit-keyframes rotate {
    from {
        -webkit-transform: rotate(0deg);
    }
    to {
        -webkit-transform: rotate(180deg);
    }
}

.buttons {
    text-align: center;
    border-radius: 30px;
}

.blob-btn {
    z-index: 1;
    position: relative;
    margin-bottom: 30px;
    text-align: center;
    text-transform: uppercase;
    color: white;
    font-size: 16px;
    background-color: transparent;
    outline: none;
    border: none;
    transition: color 0.5s;
    cursor: pointer;
    border-radius: 30px;
}

.blob-btn:before {
    content: '';
    z-index: 1;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border: 2px solid #242bcc; /* Assuming $borderW = 2px */
    border-radius: 15px;
}

.blob-btn:after {
    content: '';
    z-index: -2;
    position: absolute;
    left: 3px; /* Assuming $borderW = 2px, $borderW*1.5 = 3px */
    top: 3px; /* Assuming $borderW = 2px, $borderW*1.5 = 3px */
    width: 100%;
    height: 100%;
    transition: all 0.3s 0.2s;
    border-radius: 30px;
}

.blob-btn:hover,
.blob-btn:focus-within {
    font-weight: bold;
    border-radius: 30px;
}

.blob-btn:hover .blob-btn-color,
.blob-btn:focus-within .blob-btn-color {
    color: #242bcc;
    transition:
        all 0.5s,
        color 0.1s;
}

.blob-btn:hover:after,
.blob-btn:focus-within:after {
    transition: all 0.3s;
    left: 0;
    top: 0;
    border-radius: 30px;
}

.blob-btn__inner {
    z-index: -1;
    overflow: hidden;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius: 15px;
    background: #242bcc;
}

.blob-btn__blobs {
    position: relative;
    display: block;
    height: 100%;
}

.blob-btn__blob {
    position: absolute;
    top: 2px; /* Assuming $borderW = 2px */
    width: calc(100% / 3); /* Assuming $numOfBlobs = 4 */
    height: 100%;
    background: white;
    border-radius: 100%;
    transform: translate3d(0, 150%, 0) scale(1.7);
    transition: transform 0.45s;
}

.blob-btn__blob:nth-child(1) {
    left: 0%;
    transition-delay: 0s;
}

.blob-btn__blob:nth-child(2) {
    left: 30%;
    transition-delay: 0.08s;
}

.blob-btn__blob:nth-child(3) {
    left: 60%;
    transition-delay: 0.16s;
}

.blob-btn__blob:nth-child(4) {
    left: 90%;
    transition-delay: 0.24s;
}

.blob-btn:hover .blob-btn__blob,
.blob-btn:focus-within .blob-btn__blob {
    transform: translateZ(0) scale(1.7);
}

.blob {
    padding: 15px 46px;
}
.blob:focus {
    outline: none;
}

.blob:focus + x-arrowSvg {
    visibility: visible;
    top: 1rem;
    opacity: 1;
    transition:
        top 0.3s,
        opacity 0.3s;
}

.scrollToTopBtn {
    border: none;
    color: white;
    cursor: pointer;

    /* place it at the bottom right corner */
    position: fixed;
    bottom: 80px;
    right: 50px;
    /* keep it at the top of everything else */
    z-index: 100;
    /* hide with opacity */
    opacity: 0;
    /* also add a translate effect */
    transform: translateY(100px);
    /* and a transition */
    transition: all 0.5s ease;
}
@media (min-width: 1500px) {
    .showBtn {
        opacity: 1;
        transform: translateY(0);
    }
}
